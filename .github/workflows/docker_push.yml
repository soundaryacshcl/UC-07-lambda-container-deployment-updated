name: Build, Push Docker & Deploy Terraform

on:
  workflow_dispatch:
  push:
    paths:
      - 'app/**'
      - '.github/workflows/ci-all.yml'
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-22.04

    permissions:
      id-token: write
      contents: write
      pull-requests: write

    env:
      AWS_REGION: ap-south-1
      ECR_REPO: hello-lambda

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::436450225331:role/oidc-assume-role
          aws-region: ${{ env.AWS_REGION }}
      - name: Create ECR repository if not exists
        env:
          AWS_REGION: ap-south-1
          ECR_REPO: hello-lambda
        run: |
          ACCOUNT_ID=436450225331
          aws ecr describe-repositories --repository-names "$ECR_REPO" --region $AWS_REGION || \
          aws ecr create-repository --repository-name "$ECR_REPO" --region $AWS_REGION
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set variables for ECR
        id: prep
        run: |
          ACCOUNT_ID=436450225331
          COMMIT_HASH=${{ github.sha }}
          TAG="build-${COMMIT_HASH::7}"  # short SHA
          ECR_URI="$ACCOUNT_ID.dkr.ecr.ap-south-1.amazonaws.com/hello-lambda"
          echo "ECR_URI=$ECR_URI" >> $GITHUB_ENV
          echo "IMAGE_TAG=$TAG" >> $GITHUB_ENV
          echo "IMAGE_URI=$ECR_URI:$TAG" >> $GITHUB_ENV


      - name: Build Docker image
        run: docker build -t $IMAGE_URI ./app

      - name: Push image to Amazon ECR
        run: docker push $IMAGE_URI
      
      - name: Update terraform.tfvars with new image_uri
        run: |
          if grep -q '^image_uri' terraform.tfvars; then
          sed -i "s|^image_uri *=.*|image_uri = \"$IMAGE_URI\"|" terraform.tfvars
          else
          echo "image_uri = \"$IMAGE_URI\"" >> terraform.tfvars
          fi


      - name: Delete all other tags except latest (optional)
        run: |
          ACCOUNT_ID=436450225331
          REPO=hello-lambda
          for digest in $(aws ecr list-images --repository-name $REPO --region ap-south-1 --query 'imageIds[?imageTag!=`latest`].imageDigest' --output text); do
            aws ecr batch-delete-image --repository-name $REPO --region ap-south-1 --image-ids imageDigest=$digest
          done

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init -reconfigure

      - name: Terraform Plan
        run: terraform plan -var="image_uri=${{ env.IMAGE_URI }}"

      - name: Terraform Apply
        run: terraform apply -auto-approve -var="image_uri=${{ env.IMAGE_URI }}"

