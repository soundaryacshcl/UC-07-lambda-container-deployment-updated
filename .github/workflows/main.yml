name: Docker Build, Push to ECR & Deploy Lambda via Terraform

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Terraform action to perform'
        required: true
        default: apply
        type: choice
        options:
          - apply
          - destroy

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: ap-south-1
  AWS_ACCOUNT_ID: 436450225331
  ECR_REPO: hello-world-ecr
  IMAGE_TAG: v1

jobs:
  build-push-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/oidc-assume-role
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region $AWS_REGION | \
            docker login --username AWS \
            --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com

      - name: Create ECR repository if not exists
        run: |
          aws ecr describe-repositories --repository-names "$ECR_REPO" || \
          aws ecr create-repository --repository-name "$ECR_REPO"

      - name: Build Docker image
        run: |
          docker build -t $ECR_REPO:$IMAGE_TAG ./hello-world
          docker tag $ECR_REPO:$IMAGE_TAG \
            $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPO:$IMAGE_TAG

      - name: Push Docker image to ECR
        run: |
          docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPO:$IMAGE_TAG

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Terraform Format Check
        run: terraform fmt -check -recursive

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan -var="image_tag=${{ env.IMAGE_TAG }}"

      - name: Terraform Apply or Destroy
        if: github.event.inputs.action == 'apply'
        run: terraform apply -auto-approve -var="image_tag=${{ env.IMAGE_TAG }}"

      - name: Terraform Destroy
        if: github.event.inputs.action == 'destroy'
        run: terraform destroy -auto-approve -var="image_tag=${{ env.IMAGE_TAG }}"
